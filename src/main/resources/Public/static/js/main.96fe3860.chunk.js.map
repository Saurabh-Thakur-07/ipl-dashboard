{"version":3,"sources":["Component/MatchDetailCard.js","Component/MatchSmallCard.js","Page/TeamPage.js","Component/YearSelector.js","Page/MatchPage.js","Component/TeamTile.js","Page/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","city","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96fe3860.chunk.js","sourcesContent":["import { React } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport \"./MatchDetailCard.scss\";\r\nexport const MatchDetailCard = ({teamName , match}) =>{\r\n    if(!match)return null;\r\n    const otherTeam = teamName === match.team1?match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner ;\r\n    return(\r\n        <div className={isMatchWon ?\"MatchDetailCard won-card\":\"MatchDetailCard lost-card\"}>\r\n            <div>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link> </h1>\r\n            <h2 className=\"match-date\">{match.date}</h2>\r\n            <h3 className=\"match-venue\">{match.venue} at {match.city}</h3>\r\n            <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1} , {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { React } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const MatchSmallCard = ({match,teamName}) =>{\r\n    if(!match)return null ;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1 ;\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner ;\r\n    return(\r\n      <div className={isMatchWon ?\"MatchSmallCard won-card\":\"MatchSmallCard lost-card\"}>\r\n          <span className=\"vs\">vs</span>\r\n          <h1><Link to={otherTeamRoute}>{otherTeam}</Link> </h1>\r\n          <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n      </div>\r\n    );\r\n}","import {useEffect,useState} from 'react'\r\nimport React from 'react';\r\nimport { useParams ,Link} from 'react-router-dom';\r\nimport {MatchDetailCard} from \"../Component/MatchDetailCard\";\r\nimport {MatchSmallCard} from \"../Component/MatchSmallCard\";\r\nimport './TeamPage.scss' ;\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({matches: []});\r\n    const{teamName} = useParams();\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n\r\n            };\r\n            fetchMatches();\r\n\r\n\r\n\r\n        }, [teamName]\r\n    );\r\n\r\n    if(!team || !team.teamName)\r\n    {\r\n        return <h2>Team not found</h2>\r\n    }\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n            <h1 className=\"team-name\">{team?.teamName}</h1>\r\n            </div>\r\n            <div className=\"wins-loss-section\">\r\n                Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches- team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n\r\n\r\n                    ]}\r\n                />;\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Match</h3>\r\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n            </div>\r\n            {team?.matches?.slice(1).map(match =><MatchSmallCard key={match.id} match={match} teamName={team.teamName}/>)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n      </div>\r\n    );\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport './YearSelector.scss';\r\nexport const YearSelector=({teamName})=>{\r\n    let years = [];\r\n    let startYear = process.env.REACT_APP_DATA_START_YEAR ;\r\n    let endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n    for(let i = startYear ; i <= endYear ; i++)\r\n    {\r\n        years.push(i);\r\n    }\r\n    return(\r\n\r\n            years.map(year =>\r\n                <h4 className=\"YearSelector\" key={year}>\r\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </h4>\r\n    ))\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {MatchDetailCard} from \"../Component/MatchDetailCard\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {YearSelector} from \"../Component/YearSelector\";\r\nimport './MatchPage.scss' ;\r\nexport const MatchPage = () => {\r\n    const {teamName ,year} = useParams();\r\n    const [matches,setMatches] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchMatches = async () => {\r\n            const response = await fetch(`/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            setMatches(data);\r\n        };\r\n        fetchMatches();\r\n\r\n    },[teamName,year])\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName}/>\r\n            </div>\r\n            <div>\r\n            <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n            {\r\n                matches?.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport './TeamTile.scss';\r\nimport {Link} from \"react-router-dom\";\r\nexport const TeamTile = ({teamName}) =>{\r\n    return(\r\n        <div className=\"TeamTile\">\r\n            <h2>\r\n                <Link to={`/teams/${teamName}`}>\r\n                {teamName}\r\n                </Link>\r\n            </h2>\r\n        </div>\r\n    )\r\n}","import {useEffect,useState} from 'react'\r\nimport React from 'react';\r\nimport {TeamTile} from \"../Component/TeamTile\"\r\nimport './HomePage.scss' ;\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n\r\n            };\r\n            fetchAllTeams();\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">Skynet Systems IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                { teams.map(team=><TeamTile key={team.id} teamName={ team.teamName} />) }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom'\nimport { TeamPage } from './Page/TeamPage';\nimport {MatchPage} from \"./Page/MatchPage\";\nimport {HomePage} from \"./Page/HomePage\"\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                <Route path={\"/teams/:teamName/matches/:year\"}>\n                    <MatchPage />\n                </Route>\n                <Route path={\"/teams/:teamName\"}>\n            <TeamPage />\n                </Route>\n                    <Route path={\"/\"}>\n                        <HomePage/>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}